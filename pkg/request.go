package pkg

type RequestID uint32

const (
	SMGP_REQUEST_MIN, SMGP_RESPONSE_MIN RequestID = iota, 0x80000000 + iota
	SMGP_LOGIN, SMGP_LOGIN_RESP
	SMGP_SUBMIT, SMGP_SUBMIT_RESP
	SMGP_DELIVER, SMGP_DELIVER_RESP
	SMGP_ACTIVE_TEST, SMGP_ACTIVE_TEST_RESP
	SMGP_FORWARD, SMGP_FORWARD_RESP
	SMGP_EXIT, SMGP_EXIT_RESP
	SMGP_QUERY, SMGP_QUERY_RESP

	SMGP_QUERY_TE_ROUTE, SMGP_QUERY_TE_ROUTE_RESP
	SMGP_QUERY_SP_ROUTE, SMGP_QUERY_SP_ROUTE_RESP
	SMGP_PAYMENT_REQUEST, SMGP_PAYMENT_REQUEST_RESP
	SMGP_PAYMENT_AFFIRM, SMGP_PAYMENT_AFFIRM_RESP
	SMGP_QUERY_USERSTATE, SMGP_QUERY_USERSTATE_RESP
	SMGP_GET_ALL_TE_ROUTE, SMGP_GET_ALL_TE_ROUTE_RESP
	SMGP_GET_ALL_SP_ROUTE, SMGP_GET_ALL_SP_ROUTE_RESP
	SMGP_UPDATE_TE_ROUTE, SMGP_UPDATE_TE_ROUTE_RESP
	SMGP_UPDATE_SP_ROUTE, SMGP_UPDATE_SP_ROUTE_RESP
	SMGP_PUSH_UPDATE_TE_ROUTE, SMGP_PUSH_UPDATE_TE_ROUTE_RESP
	SMGP_PUSH_UPDATE_SP_ROUTE, SMGP_PUSH_UPDATE_SP_ROUTE_RESP

	SMGP_REQUEST_MAX, SMGP_RESPONSE_MAX
)

func (id RequestID) String() string {
	if id <= SMGP_QUERY && id > SMGP_REQUEST_MIN {
		return []string{
			"SMGP_LOGIN",
			"SMGP_SUBMIT",
			"SMGP_DELIVER",
			"SMGP_ACTIVE_TEST",
			"SMGP_FORWARD",
			"SMGP_EXIT",
			"SMGP_QUERY",
		}[id-1]
	} else if id < SMGP_REQUEST_MAX {
		return []string{
			"SMGP_QUERY_TE_ROUTE",
			"SMGP_QUERY_SP_ROUTE",
			"SMGP_PAYMENT_REQUEST",
			"SMGP_PAYMENT_AFFIRM",
			"SMGP_QUERY_USERSTATE",
			"SMGP_GET_ALL_TE_ROUTE",
			"SMGP_GET_ALL_SP_ROUTE",
			"SMGP_UPDATE_TE_ROUTE",
		}[id-0x00000008]
	}

	if id <= SMGP_QUERY_RESP && id > SMGP_RESPONSE_MIN {
		return []string{
			"SMGP_LOGIN_RESP",
			"SMGP_SUBMIT_RESP",
			"SMGP_DELIVER_RESP",
			"SMGP_ACTIVE_TEST_RESP",
			"SMGP_FORWARD_RESP",
			"SMGP_EXIT_RESP",
			"SMGP_QUERY_RESP",
		}[id-0x80000001]
	} else if id < SMGP_RESPONSE_MAX {
		return []string{
			"SMGP_QUERY_TE_ROUTE_RESP",
			"SMGP_QUERY_SP_ROUTE_RESP",
			"SMGP_PAYMENT_REQUEST_RESP",
			"SMGP_PAYMENT_AFFIRM_RESP",
			"SMGP_QUERY_USERSTATE_RESP",
			"SMGP_GET_ALL_TE_ROUTE_RESP",
			"SMGP_GET_ALL_SP_ROUTE_RESP",
			"SMGP_UPDATE_TE_ROUTE_RESP",
		}[id-0x80000008]
	}
	return "unknown"
}
